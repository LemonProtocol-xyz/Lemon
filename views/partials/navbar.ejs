<nav class="backdrop-blur-lg dark:backdrop-blur-2xl bg-white/[0.1] dark:bg-[#8EA700]/[0.15] fixed w-full z-20 top-0 start-0 border-b border-gray-300 dark:border-b dark:border-gray-600">
    <div class="max-w-screen-2xl flex flex-wrap items-center justify-between mx-auto p-4 lg:ms-20">
        <div class="hidden lg:flex flex-row justify-center">
            <a href="" class="px-3"><span ><img src="/assets/images/X.png" alt=""></span></a>
            <a href="" class="px-3"><span ><img src="/assets/images/Medium.png" alt=""></span></a>
            <a href="" class="px-3"><span ><img src="/assets/images/Discord.png" alt=""></span></a>
            <a href="" class="px-3"><span><img src="/assets/images/Telegram.png" alt=""></span></a>
        </div>
        <div class="mx-auto">
            <a href="/" class="flex items-center lg:space-x-3 rtl:space-x-reverse">
                <img src="/assets/images/Lemon H-Lockup Colored.png" class="h-10" alt="Logo">
            </a>
        </div>
        <div class="flex lg:order-2 space-x-3 lg:space-x-0 rtl:space-x-reverse lg:hidden">
            <button data-collapse-toggle="navbar-sticky" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg lg:hidden hover:bg-[#5E6E03]/[0.1] focus:ring-transparent dark:text-gray-400 dark:hover:bg-[#5E6E03]/[0.4] transition-all" aria-controls="navbar-sticky" aria-expanded="false">
            <span class="sr-only">Open main menu</span>
            <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                <path stroke="#8EA700" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15"/>
            </svg>
        </button>
        </div>
    <div class="items-center justify-between hidden w-full lg:flex lg:w-auto lg:order-1 text-lg lg:me-20 transition-all duration-300" id="navbar-sticky">
      <ul class="flex flex-col p-4 lg:p-0 font-[1000] rounded-lg bg-inherit dark:bg-inherit lg:space-x-8 rtl:space-x-reverse lg:flex-row lg:mt-0">
        <div class="flex lg:hidden flex-row justify-center mx-auto mt-9 mb-6 pe-10">
            <a href="" class="px-3"><span ><img src="/assets/images/X.png" alt=""></span></a>
            <a href="" class="px-3"><span ><img src="/assets/images/Medium.png" alt=""></span></a>
            <a href="" class="px-3"><span ><img src="/assets/images/Discord.png" alt=""></span></a>
            <a href="" class="px-3"><span><img src="/assets/images/Telegram.png" alt=""></span></a>
        </div>
        <div class="flex flex-row w-full justify-center items-center pe-10">
            <li class="text-center flex-grow-0 pe-8">
                <input data-hs-theme-switch  type="checkbox" class="relative accent-[#5E6E03]/[0.3] w-[3.25rem] h-7 bg-[#5E6E03]/[0.3] dark:checked:bg-[#5E6E03] checked:bg-none  border-2 border-transparent rounded-full cursor-pointer transition-colors ease-in-out duration-200 ring-1 ring-transparent focus:border-[5E6E034D] focus:ring-[5E6E034D] focus:outline-none appearance-none

                before:inline-block before:size-6 before:bg-[#FFFFCD] checked:before:bg-[#FFFFCD] before:translate-x-0 checked:before:translate-x-full before:shadow before:rounded-full before:transform before:ring-0 before:transition before:ease-in-out before:duration-200

                after:absolute after:left-[0.35rem] after:top-[calc(50%-0.41rem)] after:w-[0.9rem] after:h-[0.9rem] after:bg-no-repeat after:bg-[right_center] after:bg-[length:.8125em_.8125em] after:bg-[url('/assets/images/moon.svg')] checked:after:bg-[url('/assets/images/sun.svg')] after:transform after:transition-all after:ease-in-out after:duration-200 after:opacity-70 checked:after:left-[1.8rem] checked:after:end-auto" id="darkSwitch">
            </li>
            <li class="text-center flex-grow max-w-sm">
              <a href="https://app.lemonprotocol.xyz" class="block px-4 py-2 text-sm text-white bg-[#8EA700] rounded-full border-2 border-[#8EA700] focus:ring-4 focus:outline-none focus:ring-[#8EA700] dark:bg-[#8EA700] hover:bg-[#8EA700]/[0.9] dark:hover:bg-[#8EA700]/[0.9]">Launch App</a>
            </li>
        </div>
      </ul>
    </div>
    </div>
  </nav>
  

 

  <script>
    const HSThemeAppearance = {
    init() {
        const defaultTheme = 'default'
        let theme = localStorage.getItem('hs_theme') || defaultTheme

        if (document.querySelector('html').classList.contains('dark')) return
        this.setAppearance(theme)
    },
    _resetStylesOnLoad() {
        const $resetStyles = document.createElement('style')
        $resetStyles.innerText = `*{transition: unset !important;}`
        $resetStyles.setAttribute('data-hs-appearance-onload-styles', '')
        document.head.appendChild($resetStyles)
        return $resetStyles
    },
    setAppearance(theme, saveInStore = true, dispatchEvent = true) {
        const $resetStylesEl = this._resetStylesOnLoad()

        if (saveInStore) {
            localStorage.setItem('hs_theme', theme)
        }

        if (theme === 'auto') {
            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'
        }

        document.querySelector('html').classList.remove('dark')
        document.querySelector('html').classList.remove('default')
        document.querySelector('html').classList.remove('auto')

        document.querySelector('html').classList.add(this.getOriginalAppearance())

        setTimeout(() => {
            $resetStylesEl.remove()
        })

        if (dispatchEvent) {
            window.dispatchEvent(new CustomEvent('on-hs-appearance-change', {detail: theme}))
        }
    },
    getAppearance() {
        let theme = this.getOriginalAppearance()
        if (theme === 'auto') {
            theme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'default'
        }
        return theme
    },
    getOriginalAppearance() {
        const defaultTheme = 'default'
        return localStorage.getItem('hs_theme') || defaultTheme
    }
}
HSThemeAppearance.init()

window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {
    if (HSThemeAppearance.getOriginalAppearance() === 'auto') {
        HSThemeAppearance.setAppearance('auto', false)
    }
})

window.addEventListener('load', () => {
    const $clickableThemes = document.querySelectorAll('[data-hs-theme-click-value]')
    const $switchableThemes = document.querySelectorAll('[data-hs-theme-switch]')

    $clickableThemes.forEach($item => {
        $item.addEventListener('click', () => HSThemeAppearance.setAppearance($item.getAttribute('data-hs-theme-click-value'), true, $item))
    })

    $switchableThemes.forEach($item => {
        $item.addEventListener('change', (e) => {
            HSThemeAppearance.setAppearance(e.target.checked ? 'dark' : 'default')
        })

        $item.checked = HSThemeAppearance.getAppearance() === 'dark'
    })

    window.addEventListener('on-hs-appearance-change', e => {
        $switchableThemes.forEach($item => {
            $item.checked = e.detail === 'dark'
        })
    })
})
  </script>